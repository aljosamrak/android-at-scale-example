version: 2.1

orbs:
  # https://circleci.com/orbs/registry/orb/circleci/slack
  slack: circleci/slack@3.4.1


executors:
  my-executor:
    docker:
      - image: circleci/android:api-29
    working_directory: ~/app

workflows:
  version: 2
  build-test-deploy:
    jobs:
      - checkout
      - precondition_check:
          requires:
            - checkout
      - download_dependencies:
          requires:
            - checkout
      - build:
          requires:
            - precondition_check
            - download_dependencies
      - sonar_qube:
          requires:
            - precondition_check
      - lint:
          requires:
            - precondition_check
      - unit_test:
          requires:
            - build
            - lint
            - sonar_qube
      - instrumentation_test:
          requires:
            - build
            - lint
            - sonar_qube
      - integration_test:
          requires:
            - build
            - lint
            - sonar_qube
      - automatic_test:
          requires:
            - build
            - lint
            - sonar_qube
      - espresso_test:
          requires:
            - build
            - lint
            - sonar_qube
          filters:
            branches:
              only:
                - master
                - develop
      - deploy_internal:
          requires:
            - unit_test
            - instrumentation_test
            - integration_test
            - automatic_test
            - espresso_test
      - manual_test_gplay:
          type: approval
          requires:
            - deploy_internal
      - ready_to_deploy_gplay:
          type: approval
          requires:
            - manual_test_gplay
      - archive:
          requires:
            - ready_to_deploy_gplay
      - stage_roll_out:
          requires:
            - ready_to_deploy_gplay
          filters:
            branches:
              only:
                - master
                - release
      - ready_to_full_release:
          type: approval
          requires:
            - stage_roll_out
      - full_release:
          requires:
            - ready_to_full_release
          filters:
            branches:
              only:
                - master
                - release

jobs:
  checkout:
    working_directory: ~/app
    docker:
      - image: circleci/android:api-29
    steps:
      - checkout
      - run:
          name: ls
          command: ls -la
      - persist_to_workspace:
          root: .
          paths:
            - *
  precondition_check:
    executor: my-executor
    steps:
      - attach_workspace:
          at: .
      - run: echo "precondition_check"
  download_dependencies:
    executor: my-executor
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Pwd
          command: pwd
      - run:
          name: ls
          command: ls -la
      - run:
          name: ls ci
          command: ls -la .circleci
      # generate a checksum over all build.gradle files and buildSrc folder
      - run:
          name: Generate cache key
          command: .circleci/checksum.sh /tmp/checksum.txt

      # download and cache dependencies
      - restore_cache:
          key: gradle-{{ checksum "/tmp/checksum.txt" }}

      # https://blog.danlew.net/2015/09/09/dont-use-dynamic-versions-for-your-dependencies/
      # androidDependencies vs dependencies vs buildscriptDependencies
      - run:
          name: Download Dependencies
          command: ./gradlew dependencies

      # save cache
      - save_cache:
          key: gradle-{{ checksum "/tmp/checksum.txt" }}
          paths:
            - ~/.gradle/caches
            - ~/.gradle/wrapper
  build:
    executor: my-executor
    steps:
      - attach_workspace:
          at: .
      - run:
            name: Build
            command: ./gradlew assemble

  unit_test:
    executor: my-executor
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Run Unit Tests
          command: ./gradlew test

  instrumentation_test:
    executor: my-executor
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Run Unit Tests
          command: ./gradlew connectedAndroidTest

  integration_test:
    executor: my-executor
    steps:
      - attach_workspace:
          at: .
      - run: echo "integration_test"

  automatic_test:
    executor: my-executor
    steps:
      - attach_workspace:
          at: .
      - run: echo "automatic_test"

  lint:
    executor: my-executor
    steps:
      - attach_workspace:
          at: .
      - run: echo "lint"

  sonar_qube:
    executor: my-executor
    steps:
      - attach_workspace:
          at: .
      - run: echo "sonar_qube"

  espresso_test:
    executor: my-executor
    steps:
      - attach_workspace:
          at: .
      - run: echo "espresso_test"

  deploy_internal:
    executor: my-executor
    steps:
      - attach_workspace:
          at: .
      - run: echo "deploy_internal"

  manual_test_gplay:
    executor: my-executor
    steps:
      - attach_workspace:
          at: .

      # Specified persons only can approve the workflow
      # approve via Slack
      - slack/approval-notification:
          message: Pending approval
          webhook: webhook

  archive:
    executor: my-executor
    steps:
      - attach_workspace:
          at: .
      - run: echo "archive"

  stage_roll_out:
    executor: my-executor
    steps:
      - attach_workspace:
          at: .
      - run: echo "stage_roll_out"
    # publish to stage roll-out
#    - run:
#        name: Publish to Google Play Console
#        command: ./gradlew publishGoogleBundle -Dfsfadspfkaso≈°

  ready_to_deploy_gplay:
    executor: my-executor
    steps:
      - attach_workspace:
          at: .
      - run: echo "ready_to_deploy_gplay"

  ready_to_full_release:
    executor: my-executor
    steps:
      - attach_workspace:
          at: .
      - run: echo "ready_to_full_release"

  full_release:
    executor: my-executor
    steps:
      - attach_workspace:
          at: .
      - run: echo "full_release"